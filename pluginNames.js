module.exports = {
    compute: ["automaticRestartEnabled", 
            "enableUsageExport", 
            'instanceMaxCount', 
            'instancesMultiAz', 
            'autoscaleEnabled', 
            'instanceLevelSSHOnly',
            'instanceLeastPrivilege',
            'ipForwardingDisabled',
            'connectSerialPortsDisabled',
            'csekEncryptionEnabled', 
            'osLoginEnabled' , 
            'instancePublicAccess',
            'instanceDefaultServiceAccount', 
            'shieldedVmEnabled', 
            'instanceDeletionProtection',
            'autoscaleMinCpuUtilization',
            'instanceDesiredMachineTypes', 
            'instanceTemplateMachineTypes', 
            'diskMultiAz',
            'persistentDisksAutoDelete',
            'VMDisksCMKEncrypted',
            'instanceMaintenanceBehavior',
            'instancePreemptibility',
            'diskInUse',
            'osLogin2FAEnabled',
            'diskAutomaticBackupEnabled',
            'diskOldSnapshots',
            'frequentlyUsedSnapshots',
            'applicationConsistentSnapshots',
            'deprecatedImages',
            'instanceGroupAutoHealing',
            'publicDiskImages',
            'snapshotLabelsAdded',
            'diskLabelsAdded',
            'imageLabelsAdded',
            'instanceLabelsAdded' ,
            'confidentialComputingEnabled',
            'imagesCMKEncrypted',
            'snapshotEncryption',
            'instanceNetworkExposure'
        ],
    sql : [
            "anyHostRootAccess",
            "dbAutomatedBackups",
            "dbMultiAz",
            "dbPubliclyAccessible",
            "dbRestorable",
            "dbSSLEnabled",
            "mysqlLatestVersion",
            "mysqlLocalInfile",
            "mysqlSkipShowDatabase",
            "mysqlSlowQueryLog",
            "postgresqlLatestVersion",
            "postgresqlLogCheckpoints",
            "postgresqlLogConnections",
            "postgresqlLogDisconnections",
            "postgresqlLogErrorVerbosity",
            "postgresqlLogExecutorStats",
            "postgresqlLogHostname",
            "postgresqlLogLockWaits",
            "postgresqlLogMinDuration",
            "postgresqlLogMinError",
            "postgresqlLogMinMessages",
            "postgresqlLogParserStats",
            "postgresqlLogPlannerStats",
            "postgresqlLogStatement",
            "postgresqlLogTempFiles",
            "postgresqlMaxConnections",
            "postgresqlPgAuditEnabled",
            "serverCertificateRotation",
            "sqlCMKEncryption",
            "sqlContainedDatabaseAuth",
            "sqlCrossDbOwnership",
            "sqlInstanceLabelsAdded",
            "sqlNoPublicIps",
            "sqlServerContainedDBAuth",
            "sqlServerExternalScripts",
            "sqlServerRemoteAccessDisabled",
            "sqlServerTraceFlagDisabled",
            "sqlServerUserConnections",
            "sqlServerUserOptionsDisabled",
            "storageAutoIncreaseEnabled"
        ],
    bigquery : [
            "datasetAllUsersPolicy",
            "datasetLabelsAdded",
            "datasetsCMKEncrypted",
            "tablesCMKEncrypted"
        ],
    storage : [
            "bucketAllUsersPolicy",
            "bucketEncryption",
            "bucketLabelsAdded",
            "bucketLifecycleConfigured",
            "bucketLogging",
            "bucketRetentionPolicy",
            "bucketUniformAccess",
            "bucketVersioning"
        ],
    iam: [
        "serviceLimits",
    "serviceAccountAdmin",
    "serviceAccountUser",
    "serviceAccountSeparation",
    "kmsUserSeparation",
    "serviceAccountKeyRotation",
    "serviceAccountManagedKeys",
    "corporateEmailsOnly",
    "serviceAccountTokenCreator",
    "memberAdmin",
    "serviceAccountRole",
    "bigtableAdmin",
    "bigqueryAdmin",
    "pubsubAdmin"
    ],
    vpcnetwork: [
        "excessiveFirewallRules",
        "openCassandra",
        "openDNS",
        "openDocker",
        "openSSH",
        "openCIFS",
        "openAllPorts",
        "openFTP",
        "openHadoopNameNode",
        "openHadoopNameNodeWebUI",
        "openKibana",
        "openMongo",
        "openMsSQL",
        "openMySQL",
        "openNetBIOS",
        "openOracle",
        "openPostgreSQL",
        "openRDP",
        "openRedis",
        "openRPC",
        "openSalt",
        "openSMBoTCP",
        "openSMTP",
        "openSQLServer",
        "openTelnet",
        "openVNCClient",
        "openVNCServer",
        "openOracleAutoDataWarehouse",
        "multipleSubnets",
        "defaultVpcInUse",
        "flowLogsEnabled",
        "privateAccessEnabled",
        "dnsLoggingEnabled",
        "openCustomPorts",
        "firewallLoggingMetadata",
        "openInternalWeb",
        "openLDAPS",
        "openMemcached",
        "openSNMP",
        "openLDAP",
        "openElasticsearch",
        "openCassandraClient",
        "openCassandraMonitoring",
        "openCassandraThrift",
        "openCassandraInternode",
        "legacyNetworksExist",
        "defaultVPCExists",
        "openHTTP",
        "instanceDefaultNetwork",
        "openAllPortsEgress"
    ],
    cryptographickeys: [
        'keyRotation',
        'keyProtectionLevel',
        'kmsPublicAccess' 
    ],
    clb: [
        'clbHttpsOnly',
        'clbNoInstances',
        'clbSecurityPolicyEnabled',
        'clbCDNEnabled',
        'clbLoggingEnabled'
    ],
    api: [
        'apiKeyRotation',
        'apiKeyApplicationRestriction',
        'apiKeyActiveServices',
        'projectAPIKeys',
        'apiKeyAPIRestriction'
    ],
    kubernetes: [
    "privateEndpoint",
    "monitoringEnabled",
    "clusterLeastPrivilege",
    "loggingEnabled",
    "aliasIpRangesEnabled",
    "legacyAuthorizationDisabled",
    "masterAuthorizedNetwork",
    "clusterLabelsAdded",
    "webDashboardDisabled",
    "defaultServiceAccount",
    "cosImageEnabled",
    "autoNodeRepairEnabled",
    "autoNodeUpgradesEnabled",
    "networkPolicyEnabled",
    "privateClusterEnabled",
    "basicAuthenticationDisabled",
    "kubernetesAlphaDisabled",
    "shieldedNodes",
    "integrityMonitoringEnabled",
    "secureBootEnabled",
    "nodeEncryption",
    "clusterEncryption",
    "binaryAuthorizationEnabled",
    "clientCertificateDisabled",
    "clusterNetworkExposure"
  ],
  dns: [
    'dnsSecEnabled',
    'dnsSecSigningAlgorithm',
    'dnsZoneLabelsAdded'
  ],
  logging: [
    "auditLoggingEnabled",
    "projectOwnershipLogging",
    "storagePermissionsLogging",
    "sqlConfigurationLogging",
    "auditConfigurationLogging",
    "customRoleLogging",
    "vpcFirewallRuleLogging",
    "vpcNetworkRouteLogging",
    "vpcNetworkLogging",
    "logSinksEnabled"
  ],
  pubsub: [
    'topicEncryption',
    'deadLetteringEnabled',
    'topicLabelsAdded',
    'topicAllUsersPolicy'
  ],
  dataflow: [
    'dataflowHangedJobs',
    'dataflowJobsEncryption'
  ],
  deploymentmanager: [
    'deleteExpiredDeployments'
  ],
  spanner: [
    'instanceNodeCount'
  ],
  cloudfunctions: [
    "httpTriggerRequireHttps",
    "functionDefaultServiceAccount",
    "ingressAllTrafficDisabled",
    "cloudFunctionLabelsAdded",
    "cloudFunctionOldRuntime",
    "functionAllUsersPolicy",
    "serverlessVPCAccess",
    "cloudFunctionNetworkExposure"
  ],
  cloudresourcemanager: [
    "computeAllowedExternalIPs",
    "disableAutomaticIAMGrants",
    "disableGuestAttributes",
    "disableSerialPortAccess",
    "disableKeyCreation",
    "disableKeyUpload",
    "disableIdentityClusterCreation",
    "detailedAuditLoggingMode",
    "uniformBucketLevelAccess",
    "requireOsLogin",
    "restrictAuthorizedNetworks",
    "disableDefaultEncryption",
    "restrictLoadBalancerCreation",
    "restrictSharedVPCSubnetworks",
    "restrictVPCPeering",
    "restrictVPNPeerIPs",
    "disableVMIPForwarding",
    "trustedImageProjects",
    "skipDefaultNetworkCreation",
    "locationBasedRestriction",
    "disableServiceAccountCreation",
    "essentialContactsConfigured"
  ],
  dataproc: [
    'dataprocClusterLabelsAdded',
    'hadoopSecureModeEnabled',
    'dataprocClusterEncryption'
  ],
  bigtable: [
    'bigtableInstanceLabelsAdded'
  ],
  serviceusage: [
    'assetInventoryEnabled'
  ],
  security: [
    'accessApprovalEnabled'
  ],
  cloudbuild: [
    'commentControlEnabled',
    'userApprovalEnabled',
    'specificSourceBranch',
    'triggerHasTags'
  ],
  composer: [
    'environmentLabelsAdded',
    'environmentEncryption',
    'envDefaultServiceAccount',
    'webserverPublicAccess'
  ],
  vertexai: [
    'vertexAIDatasetLabels',
    'vertexAIDatasetEncryption',
    'modelLabelsAdded',
    'modelEncryption'
  ]

}